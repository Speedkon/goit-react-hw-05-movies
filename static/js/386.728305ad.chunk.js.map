{"version":3,"file":"static/js/386.728305ad.chunk.js","mappings":"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","sources":["components/MoviesList/MoviesList.js","helpers/api.js","pages/MoviesPage/MoviesPage.js"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nexport const MoviesList = ({movies}) => {\n    const location = useLocation();\n    \n    return (\n        <ul>\n                {movies.length > 0 && (\n                    movies.map(\n                        (movie, index) => {\n                            const { id, original_title, poster_path} = movie;\n                            const BASE_URL = \"https://image.tmdb.org/t/p/w200\";\n                            const photo = BASE_URL + poster_path;\n                            const defaultImg = 'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700'\n\n                            return (\n                                <li key={index}>\n                                    <Link to={`movies/${id}`} state={{from: location}}>\n                                    {poster_path && (<img src={poster_path ? photo : defaultImg} width={250} alt={original_title} />)}\n                                    <h1>{original_title}</h1>\n                                    </Link>\n                                </li>)\n                        }\n                    )\n                )}\n            </ul>\n    )\n}","import axios from 'axios';\n\naxios.defaults.baseURL = \"https://api.themoviedb.org/3\";\nconst API_KEY = \"bff0848e79a71a719886e08586df4a8c\";\n\nexport async function getTrendingMovies() {\n    const response = await axios(`/trending/movie/day?api_key=${API_KEY}`);\n    return response.data;\n};\n\nexport async function fetchMovies(query) {\n    const response = await axios(`/search/movie?api_key=${API_KEY}&query=${query}`);\n    return response.data;\n};\n\nexport async function getMovieDetails(movieId) {\n    const response = await axios(`/movie/${movieId}?api_key=${API_KEY}`);\n    return response.data;\n};\n\nexport async function getCast(movieId) {\n    const response = await axios(`/movie/${movieId}/credits?api_key=${API_KEY}`);\n    return response.data;\n};\n\nexport async function getReviews(movieId) {\n    const response = await axios(`/movie/${movieId}/reviews?api_key=${API_KEY}`);\n    return response.data;\n};","import { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { fetchMovies } from \"helpers/api\";\nimport { MoviesList } from \"components/MoviesList/MoviesList\";\n\nexport default function MoviesPage() {\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [movies, setMovies] = useState([]);\n\n    const [params, setParams] = useSearchParams()\n    const searchedMovie = params.get(\"movie\") ?? \"\";\n\n    useEffect(() => {\n        const getMovie = async () => {\n        setIsLoading(true)\n        try {\n            if (!searchedMovie) {\n                return\n            }\n            const {results} = await fetchMovies(searchedMovie)\n            if (!results) {\n                return\n            }\n            setMovies(results)\n\n        } catch (error) {\n            setError(error)\n            \n        } finally {\n            setIsLoading(false)\n        }};\n\n        getMovie()\n\n    }, [searchedMovie])\n    \n    const onSearch = (e) => {\n        e.preventDefault()\n        \n        const { value } = e.target.elements.movie; \n        if (value) {\n        setParams({movie: value})\n        }\n    } \n    return (\n        <>\n            <form onSubmit={onSearch}>\n                <input\n                    type=\"text\" autoComplete=\"off\" placeholder=\"Search movie\"\n                    name=\"movie\">\n                </input>\n                <button>Search</button>\n            </form>\n\n            <div>\n                {error && <p>Oops, something went wrong.</p>}\n                {isLoading && <p>Loading...</p>}\n                {movies.length > 0 && !isLoading && <MoviesList movies={movies}/>}\n                {movies.length === 0 && !isLoading && searchedMovie &&<p>Movie \"{searchedMovie}\" not found.</p>}\n            </div>\n        </>\n)}"],"names":["MoviesList","_ref","movies","location","useLocation","_jsx","children","length","map","movie","index","id","original_title","poster_path","photo","_jsxs","Link","to","concat","state","from","src","width","alt","axios","API_KEY","getTrendingMovies","_getTrendingMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","sent","abrupt","data","stop","fetchMovies","_x","_fetchMovies","_callee2","query","_context2","getMovieDetails","_x2","_getMovieDetails","_callee3","movieId","_context3","getCast","_x3","_getCast","_callee4","_context4","getReviews","_x4","_getReviews","_callee5","_context5","MoviesPage","_params$get","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","error","setError","_useState5","_useState6","setMovies","_useSearchParams","useSearchParams","_useSearchParams2","params","setParams","searchedMovie","get","useEffect","getMovie","_yield$fetchMovies","results","t0","finish","_Fragment","onSubmit","e","preventDefault","value","target","elements","type","autoComplete","placeholder","name"],"sourceRoot":""}