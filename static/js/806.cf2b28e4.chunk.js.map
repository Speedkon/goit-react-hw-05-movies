{"version":3,"file":"static/js/806.cf2b28e4.chunk.js","mappings":"gRAKe,SAASA,IAEpB,IAAAC,GAAkCC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAA1CI,EAASF,EAAA,GAAEG,EAAYH,EAAA,GAC9BI,GAA0BL,EAAAA,EAAAA,UAAS,MAAKM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GACtBG,GAA4BT,EAAAA,EAAAA,UAAS,IAAGU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAjCE,EAAMD,EAAA,GAAEE,EAASF,EAAA,IAExBG,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAW,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACE,OAAlBnB,GAAa,GAAKiB,EAAAC,KAAA,EAAAD,EAAAE,KAAA,GAEYC,EAAAA,EAAAA,MAAmB,OAAAL,EAAAE,EAAAI,KAArCL,EAAOD,EAAPC,QACRR,GAAU,SAAAU,GAAI,SAAAI,QAAAC,EAAAA,EAAAA,GAAQL,IAAIK,EAAAA,EAAAA,GAAKP,GAAO,IAAEC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAExCb,EAAQa,EAAAO,IAAO,QAEI,OAFJP,EAAAC,KAAA,GAEflB,GAAa,GAAMiB,EAAAQ,OAAA,6BAAAR,EAAAS,OAAA,GAAAZ,EAAA,wBAE1B,kBAVgB,OAAAH,EAAAgB,MAAA,KAAAC,UAAA,KAWjBlB,GACJ,GAAG,IAEH,IAAMmB,GAAWC,EAAAA,EAAAA,MAEjB,OACIC,EAAAA,EAAAA,MAAA,OAAAC,SAAA,EACIC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,mBAEH7B,IAAS8B,EAAAA,EAAAA,KAAA,KAAAD,SAAG,gCACZjC,IAAakC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,gBAEjBC,EAAAA,EAAAA,KAAA,MAAAD,SACKzB,EAAO2B,OAAS,GACb3B,EAAO4B,KACH,SAACC,EAAOC,GACJ,IAAQC,EAAmCF,EAAnCE,GAAIC,EAA+BH,EAA/BG,eAAgBC,EAAeJ,EAAfI,YAE1BC,EADe,kCACID,EAErB,OACIP,EAAAA,EAAAA,KAAA,MAAAD,UACID,EAAAA,EAAAA,MAACW,EAAAA,GAAI,CAACC,GAAE,UAAArB,OAAYgB,GAAMM,MAAO,CAACC,KAAMhB,GAAUG,SAAA,CACjDQ,IAAgBP,EAAAA,EAAAA,KAAA,OAAKa,IAAKL,EAAOM,IAAKR,KACvCN,EAAAA,EAAAA,KAAA,MAAAD,SAAKO,QAHAF,EAMjB,QAMxB,C","sources":["pages/HomePage/HomePage.js"],"sourcesContent":["import { useEffect, useState } from \"react\"\nimport { getTrendingMovies } from \"helpers/api\";\nimport { useLocation } from \"react-router-dom\";\nimport { Link } from 'react-router-dom';\n\nexport default function HomePage() {\n\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [movies, setMovies] = useState([]);\n\n    useEffect(() => {\n        const getTrending = async () => {\n            setIsLoading(true)\n            try {\n                const { results } = await getTrendingMovies()\n                setMovies(prev => [...prev, ...results])\n            } catch (error) {\n                setError(error)\n            } finally {\n                setIsLoading(false)\n            }\n        }\n        getTrending()\n    }, [])\n\n    const location = useLocation();\n\n    return (\n        <div>\n            <h1>Trending today</h1>\n\n            {error && <p>Oops, something went wrong.</p>}\n            {isLoading && <p>Loading...</p>}\n\n            <ul>\n                {movies.length > 0 && (\n                    movies.map(\n                        (movie, index) => {\n                            const { id, original_title, poster_path} = movie;\n                            const BASE_URL = \"https://image.tmdb.org/t/p/w200\";\n                        const photo = BASE_URL + poster_path;\n\n                            return (\n                                <li key={index}>\n                                    <Link to={`movies/${id}`} state={{from: location}}>\n                                    {poster_path && (<img src={photo} alt={original_title} />)}\n                                    <h1>{original_title}</h1>\n                                    </Link>\n                                </li>)\n                        }\n                    )\n                )}\n            </ul>\n        </div>\n    )\n}"],"names":["HomePage","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","error","setError","_useState5","_useState6","movies","setMovies","useEffect","getTrending","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$getTrendingMov","results","_context","prev","next","getTrendingMovies","sent","concat","_toConsumableArray","t0","finish","stop","apply","arguments","location","useLocation","_jsxs","children","_jsx","length","map","movie","index","id","original_title","poster_path","photo","Link","to","state","from","src","alt"],"sourceRoot":""}