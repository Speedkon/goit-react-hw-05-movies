{"version":3,"file":"static/js/962.e6f5e2a1.chunk.js","mappings":"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","sources":["components/MovieDetails/MovieDetails.styled.js","components/MovieDetails/MovieDetails.js","pages/MoviesDetailsPage/MoviesDetailsPage.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n    display: flex;\n    gap: 20px;\n`;","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\"\nimport { getMovieDetails } from \"helpers/api\";\nimport { Container } from \"./MovieDetails.styled\";\n\nexport const MovieDetails = () => {\n\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n    const [movie, setMovie] = useState(null);\n\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        const getDetails = async () => {\n            setIsLoading(true)\n            try {\n                const response = await getMovieDetails(movieId)\n                setMovie({ ...response })\n            } catch (error) {\n                setError(error)\n            } finally {\n                setIsLoading(false)\n            }\n        }\n        getDetails()\n    }, [movieId]);\n    \n    const getAverage = () => {\n        const { vote_average } = movie;\n        return Math.round(vote_average * 10);\n    };\n\n    const ImgURL = () => {\n        const { poster_path } = movie;\n        const BASE_URL = \"https://image.tmdb.org/t/p/w200\";\n        return BASE_URL+poster_path;\n    }\n\n    return (\n        <>\n            {error && <p>Oops, something went wrong.</p>}\n            {isLoading && <p>Loading...</p>}\n\n\n            {movie && (\n                <Container>\n                <img src={ImgURL()} alt={movie.title}></img>\n                <div>\n                    <h1>{movie.title}</h1>\n                        <p>User score: {getAverage()}%</p>\n                    <h2>Overview</h2>\n                        <p>{ movie.overview}</p>\n                    <h2>Genres</h2>\n                    {movie.genres.map(({name}, index) => <span key={index}>{name} </span>)}\n                </div>\n                    </Container>\n\n            )}</>\n    )\n}","import { MovieDetails } from \"components/MovieDetails/MovieDetails\";\nimport { Outlet, useLocation, Link } from \"react-router-dom\"\nimport { useRef } from \"react\";\n\nexport default function MovieDetailsPage() {\n\n    const location = useLocation();\n    const backLink = useRef(location);\n\n\n    return (\n        <>\n            <Link to={backLink.current.state?.from ?? \"/movies\"}> Go back</Link>\n            \n            <MovieDetails />\n            \n            <div>\n            <p>Additional information:</p>\n\n            <ul>\n                <li>\n                    <Link to=\"cast\">Cast</Link>\n                </li>\n                <li>\n                    <Link to=\"reviews\">Reviews</Link>\n                </li>\n                </ul>\n            </div>\n\n            <Outlet />\n        </>\n)}"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","MovieDetails","_useState","useState","_useState2","_slicedToArray","isLoading","setIsLoading","_useState3","_useState4","error","setError","_useState5","_useState6","movie","setMovie","movieId","useParams","useEffect","getDetails","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","response","_context","prev","next","getMovieDetails","sent","_objectSpread","t0","finish","stop","apply","arguments","_jsxs","_Fragment","children","_jsx","src","poster_path","alt","title","vote_average","Math","round","getAverage","overview","genres","map","_ref2","index","name","MovieDetailsPage","_backLink$current$sta","_backLink$current$sta2","location","useLocation","backLink","useRef","Link","to","current","state","from","Outlet"],"sourceRoot":""}